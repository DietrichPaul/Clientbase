plugins {
	id "fabric-loom" version "1.1-SNAPSHOT"
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/clientbase.accesswidener")
}

configurations {
	implementation.extendsFrom libs
	api.extendsFrom libs
}

repositories {
	maven {
		name = "Ladysnake Mods"
		url = "https://ladysnake.jfrog.io/artifactory/mods"
		content {
			includeGroup "io.github.ladysnake"
			includeGroupByRegex "io\\.github\\.onyxstudios.*"
		}
	}
	maven {
		name = "Jitpack"
		url = "https://jitpack.io"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "io.github.ladysnake:satin:${satin_version}"
	include "io.github.ladysnake:satin:${satin_version}"

	// libs is for shadowed jars
	libs "com.github.FlorianMichael:DietrichEvents:${project.dietrichevents_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}
